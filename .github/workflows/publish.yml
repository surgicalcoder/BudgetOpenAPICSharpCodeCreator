# GitHub Action for Building and Publishing Release
# Save this as .github/workflows/build-and-release.yml

name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0
  workflow_dispatch:  # Allows manual triggering

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion
      
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.10.2
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v0.10.2
      with:
        useConfigFile: true
        configFilePath: gitversion.yml
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'  # Adjust version as needed
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build project
      run: dotnet build --configuration Release --no-restore -p:Version=${{ steps.gitversion.outputs.assemblySemVer }} -p:AssemblyVersion=${{ steps.gitversion.outputs.assemblySemVer }} -p:FileVersion=${{ steps.gitversion.outputs.assemblySemFileVer }}
      
    - name: Run tests (if any)
      run: dotnet test --configuration Release --no-build --verbosity normal
      continue-on-error: true  # Continue even if tests fail
      
    - name: Publish project
      run: dotnet publish --configuration Release --no-build --output ./publish
      
    - name: Create release archive
      run: |
        cd publish
        tar -czf ../BudgetOpenAPICSharpCodeCreator-${{ steps.gitversion.outputs.semVer }}.tar.gz *
        cd ..
        zip -r BudgetOpenAPICSharpCodeCreator-${{ steps.gitversion.outputs.semVer }}.zip publish/
        
    - name: Generate release notes
      id: release_notes
      run: |
        echo "RELEASE_NOTES<<EOF" >> $GITHUB_OUTPUT
        echo "## Release v${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Version Information" >> $GITHUB_OUTPUT
        echo "- Version: ${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_OUTPUT
        echo "- Assembly Version: ${{ steps.gitversion.outputs.assemblySemVer }}" >> $GITHUB_OUTPUT
        echo "- Informational Version: ${{ steps.gitversion.outputs.informationalVersion }}" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Changes" >> $GITHUB_OUTPUT
        echo "- Built from commit: ${{ github.sha }}" >> $GITHUB_OUTPUT
        echo "- Build date: $(date)" >> $GITHUB_OUTPUT
        echo "" >> $GITHUB_OUTPUT
        echo "### Files" >> $GITHUB_OUTPUT
        echo "- \`BudgetOpenAPICSharpCodeCreator-${{ steps.gitversion.outputs.semVer }}.tar.gz\` - Linux/macOS archive" >> $GITHUB_OUTPUT
        echo "- \`BudgetOpenAPICSharpCodeCreator-${{ steps.gitversion.outputs.semVer }}.zip\` - Windows archive" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.gitversion.outputs.semVer }}
        name: Release v${{ steps.gitversion.outputs.semVer }}
        body: ${{ steps.release_notes.outputs.RELEASE_NOTES }}
        draft: false
        prerelease: ${{ steps.gitversion.outputs.preReleaseTag != '' }}
        files: |
          BudgetOpenAPICSharpCodeCreator-${{ steps.gitversion.outputs.semVer }}.tar.gz
          BudgetOpenAPICSharpCodeCreator-${{ steps.gitversion.outputs.semVer }}.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}